# Application configuration to use Cloud Spanner with Spring Data JPA

# Cloud Spanner example connection URL.
# - ${PROJECT_ID} Replace with your GCP project ID
# - ${INSTANCE_ID} Replace with your Spanner instance ID
# - ${DATABASE_NAME} Replace with your Spanner database name within your Spanner instance
# Uncomment the following line if you want to connect to real Cloud Spanner instead of the emulator.
# spring.datasource.url=jdbc:cloudspanner:/projects/${PROJECT_ID}/instances/${INSTANCE_ID}/databases/${DATABASE_NAME}

# The sample application uses the Cloud Spanner Emulator by default.
# By adding 'autoConfigEmulator=true' to the JDBC Connection URL, the JDBC driver will automatically
# connect to the emulator running on localhost:9010. It will also automatically create the instance
# and database in the connection string if those do not yet exist.
spring.datasource.url=jdbc:cloudspanner:/projects/test-project/instances/test-instance/databases/test-database;autoConfigEmulator=true


# Specify the Spanner JDBC driver.
spring.datasource.driver-class-name=com.google.cloud.spanner.jdbc.JdbcDriver

# Specify the Spanner Hibernate dialect.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SpannerDialect

spring.jpa.hibernate.ddl-auto=update

# Settings to enable batching statements for efficiency
spring.jpa.properties.hibernate.jdbc.batch_size=100

# You may display SQL statements and stats for debugging if needed.
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
